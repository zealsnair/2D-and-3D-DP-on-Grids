#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    int cherryPickup(vector<vector<int>>& grid) {
        int n = grid.size();
        int m = grid[0].size();

        vector<vector<int>> front(m, vector<int>(m, -1)), curr(m, vector<int>(m, -1));

        // Base Case
        for(int j1 = 0; j1 < m; ++j1){
            for(int j2 = 0; j2 < m; ++j2){
                if(j1 == j2) 
                    front[j1][j2] = grid[n-1][j1];
                else 
                    front[j1][j2] = grid[n-1][j1] + grid[n-1][j2];
            }
        }

        for(int i = n-2; i >= 0; --i){
            for(int j1 = 0; j1 < m; ++j1){
                for(int j2 = 0; j2 < m; ++j2){
                    curr[j1][j2] = -1e8;
                    for(int dj1 = -1; dj1 <= 1; ++dj1){
                        for(int dj2 = -1; dj2 <= 1; ++dj2){
                            int value;
                            if(j1 == j2){
                                value = grid[i][j1];
                            }
                            else{
                                value = grid[i][j1] + grid[i][j2];
                            }

                            if(j1+dj1 < 0 || j1+dj1 >= m || j2+dj2 < 0 || j2+dj2 >= m){
                                value = -1e8;
                            }
                            else{
                                value += front[j1+dj1][j2+dj2];
                            }

                            curr[j1][j2] = max(curr[j1][j2], value);
                        }
                    }
                }
            }
            front = curr;
        }
        return front[0][m-1];
    }
};

int main() {
    int n, m;
    cout << "Enter number of rows (n): ";
    cin >> n;
    cout << "Enter number of columns (m): ";
    cin >> m;

    vector<vector<int>> grid(n, vector<int>(m));

    cout << "Enter the grid elements row-wise:\n";
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            cin >> grid[i][j];
        }
    }

    Solution obj;
    int result = obj.cherryPickup(grid);
    cout << "Maximum cherries collected: " << result << endl;

    return 0;
}
